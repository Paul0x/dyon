<?php/* * **************************************** *     _____                     *    |  __ \                    *    | |  | |_   _  ___  _ __   *    | |  | | | | |/ _ \| '_ \  *    | |__| | |_| | (_) | | | | *    |_____/ \__, |\___/|_| |_| *             __/ |             *            |___/   *            *       Paulo Felipe Possa Parrira [ paul (dot) 0 (at) live (dot) de ] *  ===================================================================== *  File: cliente_overview.php *  Type: Controller *  ===================================================================== *  */class clienteOverviewController {    private $twig;    private $url;    private $user;    private $usercontroller;    private $cliente;    /**     * Constrói o objeto e inicializa a conexão com o banco de dados.     */    public function __construct($url, $twig, $usercontroller) {        $this->conn = new conn();        $this->url = $url;        $this->twig = $twig;        $this->usercontroller = $usercontroller;        try {            $this->user = $this->usercontroller->getUser(5);        } catch (Exception $error) {            header("location: " . HTTP_ROOT);        }        if (!is_numeric($this->url[1])) {            $this->loadNotFoundInterface();        } else {            switch ($this->url[2]) {                default:                    $this->loadClienteOverview($this->url[1]);                    break;                case "alterar":                    $this->loadEditCliente($this->url[1]);                    break;            }        }    }    private function loadNotFoundInterface() {        echo $this->twig->render("controle/error_control.twig", Array("error" => "Cliente não encontrado.", "config" => config::$html_preload, "user" => $this->user->getBasicInfo()));    }    private function loadClienteOverview($id) {        $this->cliente = $this->usercontroller->getUser(0, false);        try {            $this->cliente->setConn($this->conn);            $this->cliente->setId($id);            $this->cliente->setInfo();            $cliente = $this->cliente->getBasicInfo();            $cliente['data_criacao'] = $this->cliente->getCreationDate();            try {                $this->pacotecontroller = new pacoteController($this->conn);                $cliente['pacotes'] = $this->pacotecontroller->listPacotesByUserId($this->cliente);            } catch (Exception $error) {                $cliente['pacotes'] = false;            }            echo $this->twig->render("controle/cliente_overview_control.twig", Array("cliente" => $cliente, "config" => config::$html_preload, "user" => $this->user->getBasicInfo()));        } catch (Exception $error) {            echo $this->twig->render("controle/error_control.twig", Array("error" => $error->getMessage(), "config" => config::$html_preload, "user" => $this->user->getBasicInfo()));        }    }    private function loadEditCliente($id) {        $this->cliente = $this->usercontroller->getUser(0, false);        try {            $this->cliente->setConn($this->conn);            $this->cliente->setId($id);            $this->cliente->setInfo();            if ($_POST['submit']) {                try {                    $data['nome'] = filter_input(INPUT_POST, "nome", FILTER_SANITIZE_SPECIAL_CHARS);                    $data['rg'] = filter_input(INPUT_POST, "rg", FILTER_SANITIZE_SPECIAL_CHARS);                    $data['email'] = filter_input(INPUT_POST, "email", FILTER_SANITIZE_SPECIAL_CHARS);                    $data['sexo'] = filter_input(INPUT_POST, "sexo", FILTER_SANITIZE_SPECIAL_CHARS);                    $data['estado'] = filter_input(INPUT_POST, "estado", FILTER_SANITIZE_SPECIAL_CHARS);                    $data['cidade'] = filter_input(INPUT_POST, "cidade", FILTER_SANITIZE_SPECIAL_CHARS);                    $data['senha'] = filter_input(INPUT_POST, "senha", FILTER_SANITIZE_SPECIAL_CHARS);                    $this->cliente->UpdateInfos($data);                    $success_submit = true;                } catch (Exception $ex) {                    $error_log = $ex->getMessage();                }            }                    $cliente = $this->cliente->getBasicInfo();                    $cliente['data_criacao'] = $this->cliente->getCreationDate();            echo $this->twig->render("controle/cliente_edit_control.twig", Array("cliente" => $cliente, "config" => config::$html_preload, "user" => $this->user->getBasicInfo(), "error" => $error_log, "success" => $success_submit));        } catch (Exception $error) {            echo $this->twig->render("controle/error_control.twig", Array("error" => $error->getMessage(), "config" => config::$html_preload, "user" => $this->user->getBasicInfo()));        }    }}