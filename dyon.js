/****************************************** *     _____                     *    |  __ \                    *    | |  | |_   _  ___  _ __   *    | |  | | | | |/ _ \| '_ \  *    | |__| | |_| | (_) | | | | *    |_____/ \__, |\___/|_| |_| *             __/ |             *            |___/   *            *       Paulo Felipe Possa Parrira [ paul (dot) 0 (at) live (dot) de ] *  ===================================================================== *  File: dyon.js *  Type: API *  Autor: Paulo Felipe *  ===================================================================== *  API de Integração do Dyon com o site do CarnaBoemia 2016 */DyonAPI = function () {    this.self = this;    this.dyon_root = "dyon/api";    this.user = new Object();    this.evento = 2;    this.lote = {        masculino: {            ouro: {                id: 36,                valor: "1550,00"            },            prata: {                id: 34,                valor: "1270,00"            }        },        feminino: {            ouro: {                id: 37,                valor: "1430,00"            },            prata: {                id: 35,                valor: "1150,00"            }        }    };};DyonAPI.prototype = {    constructor: DyonAPI,    init: function () {        this.checkAuth();        this.bindButtons();    },    bindButtons: function () {        $("#ajax-box-container").die().live("click", function () {            $(".ajax-box").fadeOut(500, function () {                $("#ajax-box-container").remove();                $(".ajax-box").remove();            });        });        $(".ajax-close-button").die().live("click", function () {            $(".ajax-box").fadeOut(500, function () {                $("#ajax-box-container").remove();                $(".ajax-box").remove();            });        });    },    checkAuth: function () {        var self = this;        this.makeRequest("authCheck", null, function (response) {            response = eval("( " + response + " )");            if (response.success === "true") {                self.mainInit(response.user);            } else {                self.loginInit();            }        }, false);    },    makeRequest: function (action, data, callback, new_datamodel) {        var datamodel;        if (new_datamodel === true) {            datamodel = data;        } else {            datamodel = {                mode: action,                data: data            };        }        $.ajax({            url: this.dyon_root,            data: datamodel,            success: callback        });    },    makeSyncRequest: function (action, data, callback, new_datamodel) {        var datamodel;        if (new_datamodel === true) {            datamodel = data;        } else {            datamodel = {                mode: action,                data: data            };        }        $.ajax({            url: this.dyon_root,            async: false,            data: datamodel,            success: callback        });    },    mainInit: function (user) {        var self = this;        $.ajax({            url: root + "/cliente/",            data:                    {                        action: "main_interface"                    },            success: function (data)            {                data = eval("( " + data + " )");                if (data.success !== "true") {                    self.genericError(data.error);                    return;                }                $("#cliente-interface-wrap").html(data.html);                $(".field-nome").html(user.nome);                self.listPacotes();                $(".menu-add").live("click", function () {                    self.loadAddForm(user, {}, 1);                });                $(".menu-watch").live("click", function () {                    self.listPacotes();                });                $(".menu-edit").live("click", function () {                    self.editProfileForm(user);                });                $(".menu-logout").live("click", function () {                    self.logoutUser();                });            }        });    },    loginInit: function () {        var self = this;        $.ajax({            url: root + "/cliente/",            data:                    {                        action: "login_form"                    },            success: function (data)            {                data = eval("( " + data + " )");                if (data.success === "true") {                    $("#cliente-interface-wrap").html(data.html);                    $("#submit-login").live("click", function () {                        self.authUser();                    });                    $("#load-cadastro").live("click", function () {                        self.loadCadastroForm();                    });                    $("#password-forgot").live("click", function () {                        self.loadRecoveryPasswordForm();                    });                    if (window.location.hash) {                        var vars = window.location.hash.substring(1).split("/"); //Puts hash in variable, and removes the # character                        if (vars[0] === "recovery") {                            self.loadRecoveryPasswordChange(vars[1]);                        }                    }                }            }        });    },    loginError: function () {        $("#submit-login").after("<div class='error-login'>Usuário ou senha inválidos.</div>");        setTimeout(function () {            $(".error-login").remove();        }, 5000);    },    genericError: function (message) {        $("body").prepend("<div class='generic-error-box'>" + message + "</div>");        setTimeout(function () {            $(".generic-error-box").remove();        }, 5000);    },    logoutUser: function () {        this.makeRequest("logoutUser", "", function (response) {            location.reload(true);        }, false);    },    authUser: function () {        var self = this;        var data = {            email: $(".login-input[type=email]").val(),            password: $(".login-input[type=password]").val()        };        this.makeRequest("authUser", data, function (response) {            response = eval("( " + response + " )");            if (response.success === "true") {                self.user = response.user;                self.mainInit(response.user);            } else                self.loginError(response.error);        }, false);    },    loadCadastroForm: function () {        var self = this;        $.ajax({            url: root + "/cliente/",            data:                    {                        action: "user_cadastro_form"                    },            success: function (data)            {                data = eval("( " + data + " )");                if (data.success === "true") {                    $("#cliente-interface-wrap").html(data.html);                    $("#cadastro-submit").die().live("click", function () {                        self.cadastroFormSubmit();                    });                } else                    self.genericError(data.error);            }        });    },    cadastroFormSubmit: function () {        var self = this;        var data = {            mode: "user_register",            nome: $(".cadastro-form-input[name=nome]").val(),            email: $(".cadastro-form-input[name=email]").val(),            senha: $(".cadastro-form-input[name=senha]").val(),            rg: $(".cadastro-form-input[name=rg]").val(),            sexo: $(".cadastro-form-input[name=sexo]").val(),            cidade: $(".cadastro-form-input[name=cidade]").val(),            estado: $(".cadastro-form-input[name=estado]").val(),        };        this.makeSyncRequest("user_register", data, function (response) {            response = eval("( " + response + " )");            if (response.success === "true") {                $("#cadastro-submit").attr("disabled", "disabled");                $("#cadastro-log")                        .html("<div class='message-success'>Você foi cadastrado com sucesso, <a href=''>clique aqui</a> para entrar.</div>");            } else {                $("#cadastro-log")                        .html("<div class='message-error'>" + response.error + ".</div>");            }        }, true);    },    loadRecoveryPasswordForm: function () {        var self = this;        var html = "<div id='password-recovery-wrap'>";        html += "<div class='title'>Recuperação de Senha</div>";        html += "<div class='info'>Para recuperar a sua senha digite seu email no campo abaixo e espere a confirmação em sua caixa de entrada.</div>";        html += "<input type='text' id='recovery-password-email' placeholder='Insira o email da sua conta.' />";        html += "<input type='button' id='recovery-password-submit' value='Enviar Email' />";        html += "</div>";        $("#cliente-interface-wrap").html(html);        $("#recovery-password-submit").die().live("click", function () {            var data = {                email: $("#recovery-password-email").val()            };            if (data.email === null || data.email === "") {                self.genericError("Insira um email válido.");                return;            }            self.makeSyncRequest("recoveryPasswordSubmit", data, function (response) {                response = eval("( " + response + ")");                if (response.success === "true") {                    $("#recovery-password-submit").attr("disabled", "disabled");                    $("#recovery-password-submit").after("<div class='recovery-sent-success'>Email enviado com successo.</div>");                } else {                    self.genericError(response.error);                }            });        });    },    loadRecoveryPasswordChange: function (code) {        var self = this;        var html = "<div id='password-recovery-wrap'>";        html += "<div class='title'>Recuperação de Senha</div>";        html += "<div class='info'>Digite e confirme sua nova senha abaixo, com o código enviado via URL.</div>";        html += "<input type='text' id='recovery-password-code' value='" + code + "' placeholder='Insira o código de recuperação' />";        html += "<input type='password' id='recovery-password-pw' placeholder='Insira sua nova senha. (min 6 caracteres)' />";        html += "<input type='password' id='recovery-password-pw2' placeholder='Confirme sua nova senha' />";        html += "<input type='button' id='recovery-password-submit' value='Enviar Email' />";        html += "</div>";        $("#cliente-interface-wrap").html(html);        $("#recovery-password-submit").die().live("click", function () {            var data = {                cod: $("#recovery-password-code").val(),                password: $("#recovery-password-pw").val()            };            var pw2 = $("#recovery-password-pw2").val();            if (pw2 !== data.password) {                self.genericError("As senhas precisam combinar.");                return;            }            if (data.cod === "" || data.cod.length !== 32) {                self.genericError("Você precisa digitar um código válido.");                return;            }            self.makeSyncRequest("recoveryPasswordChange", data, function (response) {                response = eval("( " + response + " )");                if (response.success === "true") {                    $("#recovery-password-submit").attr("disabled", "disabled");                    $("#recovery-password-submit").after("<div class='recovery-sent-success'>Senha alterada com sucesso. <a href='cliente'>Clique Aqui</a> para logar.</div>");                }            });        });    },    editProfileForm: function (user) {        var self = this;        var estados = Array(                ["AC", "Acre"],                ["AL", "Alagoas"],                ["AP", "Amapá"],                ["AM", "Amazonas"],                ["BA", "Bahia"],                ["CE", "Ceará"],                ["DF", "Distrito Federal"],                ["ES", "Espirito Santo"],                ["GO", "Goiás"],                ["MA", "Maranhão"],                ["MS", "Mato Grosso do Sul"],                ["MT", "Mato Grosso"],                ["MG", "Minas Gerais"],                ["PA", "Pará"],                ["PB", "Paraíba"],                ["PR", "Paraná"],                ["PE", "Pernambuco"],                ["PI", "Piauí"],                ["RJ", "Rio de Janeiro"],                ["RN", "Rio Grande do Norte"],                ["RS", "Rio Grande do Sul"],                ["RO", "Rondônia"],                ["RR", "Roraima"],                ["SC", "Santa Catarina"],                ["SP", "São Paulo"],                ["SE", "Sergipe"],                ["TO", "Tocantins"]                );        var html = "<div class='edit-profile-box'>";        html += "<div class='info'>Utilize os campos abaixo para alterar as informações do seu cadastro e sua senha.</div>";        html += "<div class='subtitle'>Informações Pessoais</div>";        html += "<div class='item'>";        html += "<label>Nome Completo</label>";        html += "<input name='edit-profile-nome' type='text' value='" + user.nome + "' />";        html += "</div>";        html += "<div class='item'>";        html += "<label>RG</label>";        html += "<input name='edit-profile-rg' type='text' value='" + user.rg + "' />";        html += "</div>";        html += "<div class='item'>";        html += "<label>Email</label>";        html += "<input name='edit-profile-email' type='text' value='" + user.email + "' />";        html += "</div>";        html += "<div class='item'>";        html += "<label>Cidade</label>";        html += "<input name='edit-profile-cidade' type='text' value='" + user.cidade + "' />";        html += "</div>";        html += "<div class='item'>";        html += "<label>Estado</label>";        html += "<select name='edit-profile-estado'>";        for (i = 0; i < estados.length; i++) {            html += "<option value='" + estados[i][0] + "' ";            if (user.estado === estados[i][0])                html += "selected";            html += ">" + estados[i][1] + "</option>";        }        html += "</select>";        html += "</div>";        html += "<div class='info'><div class='subtitle'>Senha</div>Para alterar sua senha digite uma nova baixo e confirme. Mínimo de 6 caracteres.</div>";        html += "<div class='item'>";        html += "<label>Nova Senha</label>";        html += "<input name='edit-profile-senha' type='password' />";        html += "</div>";        html += "<div class='item'>";        html += "<label>Confirmar Nova Senha</label>";        html += "<input name='edit-profile-senha-confirm' type='password' />";        html += "</div>";        html += "<input type='button' id='edit-profile-submit' value='Editar Perfil' />";        html += "<div id='message-advisor'></div>";        html += "</div>";        $("#main-box").html(html);        $("#edit-profile-submit").die().live("click", function () {            $(this).val("Aguarde...");            var data = {                nome: $("input[name=edit-profile-nome]").val(),                rg: $("input[name=edit-profile-rg]").val(),                email: $("input[name=edit-profile-email]").val(),                cidade: $("input[name=edit-profile-cidade]").val(),                estado: $("input[name=edit-profile-estado]").val(),                senha: $("input[name=edit-profile-senha]").val(),                senha_c: $("input[name=edit-profile-senha-confirm]").val()            };            if (data.senha !== "" && data.senha_c !== data.senha) {                self.genericError("As senhas inseridas não batem");                return;            }            self.makeSyncRequest("editInfo", data, function (response) {                $("#edit-profile-submit").val("Editar Perfil");                response = eval("( " + response + " )");                if (response.success === "true") {                    $("#message-advisor").html("<div class='message-success'>Informações Editadas com Sucesso</div>");                    self.user = response.user;                    $("input[name=edit-profile-nome").val(self.user.nome);                    $("input[name=edit-profile-rg").val(self.user.rg);                    $("input[name=edit-profile-email").val(self.user.email);                    $("input[name=edit-profile-cidade").val(self.user.cidade);                    $("input[name=edit-profile-estado").val(self.user.estado);                    $(".field-nome").html(self.user.nome);                } else {                    $("#message-advisor").html("<div class='message-error'>" + response.error + "</div>");                }            });        });    },    listPacotes: function () {        var self = this;        var data = {            evento: 1        };        this.makeSyncRequest("getUserPacotes", data, function (response) {            response = eval("( " + response + " )");            if (response.success === "true") {                var html = "";                $.each(response.pacotes.list, function (index, pacote) {                    html += "<div class='pacote-list-item'>";                    html += "<div class='header'>" + pacote.nome_evento + "</div>";                    html += "<div class='infos'>";                    html += "<div class='item'><label>Lote</label>" + pacote.lote + "</div>";                    html += "<div class='item'><label>Pagamento</label>" + pacote.tipo_pagamento + "</div>";                    html += "<div class='item'><label>Valor</label>" + pacote.valor_total + " <span class='parcelas-pacote' grupo='" + pacote.id_pacote + "'>(Ver Parcelas)</span> </div>";                    html += "<div class='item'><label>Grupo</label>" + pacote.nome_grupo + " <span class='grupo-integrantes' grupo='" + pacote.id_grupo + "'>(Ver Integrantes)</span></div>";                    html += "<div class='item'><label>Código do Grupo</label>" + pacote.codigo_acesso + "<div class='mini-info'>Envie esse código para outras pessoas entrarem nesse grupo.</div></div>";                    html += "<div class='item-status'>";                    pacote.status_pacote = parseInt(pacote.status_pacote);                    switch (pacote.status_pacote) {                        case 0:                            html += "<div class='pacote-status-cancelado'>Cancelado</div>";                            break;                        case 1:                            html += "<div class='pacote-status-pendente'>Pendente</div>";                            break;                        case 2:                            html += "<div class='pacote-status-aprovado'>Aprovado</div>";                            break;                        case 3:                            html += "<div class='pacote-status-aprovado'>Quitado</div>";                            break;                    }                    html += "<div class='clear'></div></div>";                    html += "</div>";                    if (pacote.status_pacote === 1) {                        html += "<div class='pacote-pay' id='pacote-pay-button-" + pacote.id_pacote + "'>Ainda não realizou o pagamento? <strong>Clique Aqui</strong></div>";                    } else if (pacote.status_pacote === 2) {                        html += "<div class='pacote-pay' id='pacote-pay-button-" + pacote.id_pacote + "'>Seu pacote já foi aprovado mas tem parcelas pendentes, para visualizar as parcelas <strong>Clique Aqui</strong></div>";                    }                    html += "</div>";                });                $("#main-box").html(html);                $(".pacote-pay").die().live("click", function () {                    self.loadPacotePayment(this.id.split("-")[3]);                });                $(".grupo-integrantes").die().live("click", function () {                    self.loadGroupMembers($(this).attr("grupo"));                });            } else {                var html = "<div class='not-found'>Não foi encontrado nenhum pacote em seu perfil, deseja adicionar um pacote?</div>";                html += "<div class='pacote-add-button menu-add'>Adicionar Pacote</div>";                $("#main-box").html(html);            }        }, false);    },    loadAddForm: function (user, data, step) {        var self = this;        switch (step) {            case 1:                $.ajax({                    url: root + "/cliente/",                    async: false,                    data:                            {                                action: "add_pacote_form",                                step: 1                            },                    success: function (data)                    {                        var html;                        data = eval("( " + data + " )");                        if (data.success === "true") {                            $("#main-box").html(data.html);                            if (user.sexo == "m") {                                html = "<div class='lote-masculino-img'></div>";                                html += "<div class='lote-selector'>";                                html += "<div class='lote-select lote-prata' lote='" + self.lote.masculino.prata.id + "'>Pacote Prata Masculino<br/> [" + self.lote.masculino.prata.valor + "]</div>";                                html += "<div class='lote-select lote-ouro' lote='" + self.lote.masculino.ouro.id + "'>Pacote Ouro Masculino<br/> [" + self.lote.masculino.ouro.valor + "]</div>";                                html += "</div>";                            } else {                                html = "<div class='lote-feminino-img'></div>";                                html += "<div class='lote-selector'>";                                html += "<div class='lote-select lote-prata' lote='" + self.lote.feminino.prata.id + "'>Pacote Prata Feminino<br/> [" + self.lote.feminino.prata.valor + "]</div>";                                html += "<div class='lote-select lote-ouro' lote='" + self.lote.feminino.ouro.id + "'>Pacote Ouro Feminino<br/> [" + self.lote.feminino.ouro.valor + "]</div>";                                html += "</div>";                            }                            $("#pacote-compra-step1").append(html);                            $(".lote-select").die().live("click", function () {                                var lote = $(this).attr("lote");                                self.loadAddForm(user, {lote: lote}, 2);                            });                        } else                            self.genericError(data.error);                    }                });                break;            case 2:                self.makeSyncRequest("getLoteInfo", data, function (response) {                    response = eval("( " + response + " )");                    if (response.success === "true") {                        var html = "<div id='pacote-compra-step2'>";                        html += "<div class='info'>Agora que você selecionou o pacote, confira as informações abaixo e selecione seu grupo.</div>";                        html += "<div class='pacote-info'>";                        html += "<label>Lote</label> [" + response.lote.id + "]<strong>" + response.lote.nome + "</strong> - " + response.lote.valor_str;                        html += "</div>";                        html += "<div class='group-selector'>";                        html += "<div class='helper'><h2>Grupos</h2>Os grupos são utilizados por turistas que querem ficar juntos no mesmo quarto. Se você vem com outras pessoas então é necessário criar ou entrar em um grupo. Se você está vindo sozinho então crie um grupo só seu.</div>";                        html += "<div class='group-select' id='group-select'>Selecionar um Grupo</div>";                        html += "<div class='group-select' id='group-add'>Criar um Grupo</div>";                        html += "<div class='clear'></div></div></div>";                        data.lote = response.lote;                        $("#main-box").html(html);                        $(".group-select").die().live("click", function () {                            if (this.id === 'group-select')                                data.group_action = 'select';                            else                                data.group_action = 'add';                            self.loadAddForm(user, data, 3);                        });                    } else                        self.genericError(response.error);                }, false);                break;            case 3:                switch (data.group_action) {                    case 'add':                        var html = "<div class='helper'><h2>Adicionar Grupo</h2> Para criar um grupo insira um nome válido no campo abaixo. Assim que seu pacote for criado você receberá um código de acesso para permitir que outros usuário entrem no seu grupo. Esse código também será necessário para você registrar outro pacote seu no grupo, caso a compra atual seja cancelada.</div>";                        html += "<input type='text' class='group-input-add' id='group-name' placeholder='Insira o nome do grupo' />";                        html += "<div id='add-group-submit' class='group-submit'>Adicionar Grupo e Continuar Compra</div>";                        $(".group-selector").html(html);                        $("#add-group-submit").die().live("click", function () {                            data.group_name = $("#group-name").val();                            if (data.group_name === "" || data.group_name === undefined) {                                self.genericError("Nome do grupo inválido.");                                return;                            }                            self.loadAddForm(user, data, 4);                        });                        break;                    case 'select':                        var html = "<div class='helper'><h2>Selecionar Grupo</h2> Para entrar em um grupo é necessário digitar o código do grupo abaixo, para conseguir esse código é necessário entrar em contato com o líder do grupo.</div>";                        html += "<input type='text' class='group-input-add' id='group-cod' placeholder='Insira o código do grupo. Ex. \"358539197c7b4\"' />";                        html += "<input type='button' id='sel-group-submit' class='group-submit' value='Verificar Grupo'>";                        $(".group-selector").html(html);                        $("#sel-group-submit").die().live("click", function () {                            var cod = $("#group-cod").val();                            self.makeSyncRequest("checkGroupByCod", {cod: cod}, function (response) {                                response = eval("( " + response + " )");                                if (response.success === "true") {                                    html = "<div class='group-info'>Grupo <strong>" + response.grupo.nome + "[ " + response.grupo.codigo_acesso + " ]</strong>";                                    html += "<div class='confirm-group'>Confirmar e Continuar Compra</div>";                                    html += "<div class='clean-group'>Escolher Outro Grupo</div>";                                    html += "</div>";                                    $("#sel-group-submit").attr("disabled", "disabled");                                    $("#sel-group-submit").after(html);                                    $(".clean-group").die().live("click", function () {                                        $("#sel-group-submit").removeAttr("disabled");                                        $(".group-info").remove();                                    });                                    $(".confirm-group").die().live("click", function () {                                        data.group_object = response.grupo;                                        self.loadAddForm(user, data, 4);                                    });                                } else                                    self.genericError(response.error);                            }, false);                        });                        break;                }                break;            case 4:                if (data.group_action === "add") {                    var html2 = "<br/><label>Grupo</label> grupo criado sob o nome de <strong>" + data.group_name + "</strong>";                    $(".pacote-info").append(html2);                } else {                    var html2 = "<br/><label>Grupo</label> você será adicionado ao grupo <strong>" + data.group_object.nome + "</strong>";                    $(".pacote-info").append(html2);                }                var html = "<div class='helper'><h2>Método de Pagamento</h2> Selecione abaixo o método de pagamento para finalizar sua compra.</div>";                html += "<div class='metodos-pagamento'>";                html += "<div class='pagseguro-img'></div>";                html += "<div class='pagseguro-info'>";                html += "<strong>O PAGSEGURO COBRA 5% DE TAXA POR TRANSAÇÃO</strong><br/>";                html += "O Pagseguro é um sistema de pagamentos que permite total garantia em suas compras. Assim que o sistema aprovar a compra seu pacote já vai estar automaticamente aprovado.</div>";                html += "<div class='deposito-img'></div>";                html += "<div class='deposito-info'>";                html += "Também aceitamos pagamento via depósito bancário na CEF, em até 5x.</div>";                html += "</div>";                html += "</div>";                $(".group-selector").html(html);                $(".pagseguro-img").die().live("click", function () {                    data.forma_pagamento = 2;                    $("body").prepend("<div id='pacote-add-waiting-wrap'><div id='pacote-add-waiting-message'>Aguarde enquanto processamos seu pacote...</div></div>");                    self.makeSyncRequest("registerPacote", data, function (response) {                        $("#pacote-add-waiting-wrap").remove();                        response = eval("( " + response + " )");                        if (response.success === "true") {                            var html = "<div class='confirma-pagseguro'>";                            html += "Parabéns, seu pedido foi registrado! Para concluir o pagamento acesse o pagseguro através do link abaixo.";                            html += '<form action="https://pagseguro.uol.com.br/checkout/v2/payment.html" method="post">';                            html += '<input type="hidden" name="code" value="' + data.lote.pagseguro_hash + '" />';                            html += '<input type="hidden" name="iot" value="button" />';                            html += '<input type="image" src="https://stc.pagseguro.uol.com.br/public/img/botoes/pagamentos/209x48-comprar-assina.gif" name="submit" alt="Pague com PagSeguro - é rápido, grátis e seguro!" />';                            html += '</form>';                            html += "</div>";                            $(".metodos-pagamento").html(html);                        } else {                            $("#pacote-add-waiting-wrap").remove();                            self.genericError(response.error);                        }                    }, false);                });                $(".deposito-img").die().live("click", function () {                    data.forma_pagamento = 3;                    self.loadAddForm(user, data, 5);                });                break;            case 5:                var html = "<div class='confirma-deposito'>";                html += "<div class='helper'>Selecione abaixo o número de vezes em que você deseja parcelar o pacote.</div>";                html += "<select name='pacote-num-parcelas' id='pacote-num-parcelas' class='select-num-parcelas'>";                html += "</select>";                html += "<input type='button' id='deposito-confirma-pacote' value='Confirmar Pacote' />";                html += "</div>";                $(".metodos-pagamento").html(html);                self.makeRequest("getMaxParcela", {mode: "getMaxParcela", forma_pagamento: 3, lote_id: data.lote.id}, function (response) {                    response = eval("( " + response + " )");                    if (response.success === "true") {                        $.each(response.parcelas, function (index, parcela) {                            $("#pacote-num-parcelas").append("<option value='" + parcela[0] + "'>" + parcela[1] + "</option>");                        });                        $("#deposito-confirma-pacote").die().live("click", function () {                            data.parcelas = parseInt($("#pacote-num-parcelas").val());                            if (isNaN(data.parcelas) || (data.parcelas < 1 || data.parcelas > 7)) {                                self.genericError("Selecione um número de parcelas válido.");                                return;                            }                            $("body").prepend("<div id='pacote-add-waiting-wrap'><div id='pacote-add-waiting-message'>Aguarde enquanto processamos seu pacote...</div></div>");                            self.makeSyncRequest("registerPacote", data, function (response) {                                response = eval("( " + response + " )");                                if (response.success === "true") {                                    var html = "<div class='confirma-deposito'>";                                    html += "Parabéns, seu pedido foi registrado! Para concluir o pagamento deposite a primeira parcela na conta informada abaixo.";                                    html += "<div class='deposito-conta'>";                                    html += "<strong>Banco:</strong> Caixa Economica Federal<br/><strong>Conta Corrente:</strong> 30758-9<br/>\n\                                             <strong>Agência:</strong> 0136<br/><strong>Operação:</strong> 001<br/><strong>Titular:</strong> Paulo Felipe Possa Parreira";                                    html += "</div>";                                    html += "<div class='warn'>Você tem 2 dias para confirmar o pagamento da primeira parcela, após esse período seu pacote será cancelado e será necessário fazer a requisição de um novo pacote.</div>";                                    html += '</div>';                                    $(".metodos-pagamento").html(html);                                    $("#pacote-add-waiting-wrap").remove();                                } else {                                    $("#pacote-add-waiting-wrap").remove();                                    self.genericError(response.error);                                }                            }, false);                        });                    } else {                        self.genericError(response.error);                    }                }, true);                break;        }    },    loadPacotePayment: function (id) {        var self = this;        this.makeSyncRequest("getPacoteInfo", {pacote_id: id}, function (response) {            response = eval("( " + response + " )");            if (response.success === "true") {                var pacote = response.pacote;                switch (parseInt(pacote.tipo_pagamento_id)) {                    case 2:                        var ihtml = '<form action="https://pagseguro.uol.com.br/checkout/v2/payment.html" method="post">';                        ihtml += '<input type="hidden" name="code" value="' + pacote.pagseguro_hash + '" />';                        ihtml += '<input type="hidden" name="iot" value="button" />';                        ihtml += '<input type="image" src="https://stc.pagseguro.uol.com.br/public/img/botoes/pagamentos/209x48-comprar-assina.gif" name="submit" alt="Pague com PagSeguro - é rápido, grátis e seguro!" />';                        ihtml += '</form>';                        break;                    case 3:                        var ihtml = "<div class='info'>Para confirmar o pagamento via depósito bancário é necessário enviar o comprovante de cada parcela. O depósito deve ser feito na conta abaixo:</div>";                        ihtml += "<div class='deposito-conta'>";                        ihtml += "<strong>Banco:</strong> Caixa Economica Federal<br/><strong>Conta Corrente:</strong> 30758-9<br/>\n\                                 <strong>Agência:</strong> 0136<br/><strong>Operação:</strong> 001<br/><strong>Titular:</strong> Paulo Felipe Possa Parreira";                        ihtml += "</div>";                        ihtml += "<div class='title'>Suas Parcelas</div>";                        ihtml += "<div class='subinfo'>Visualize a situação das suas parcelas abaixo.</div>";                        ihtml += "<div class='pacote-parcelas-box'>";                        ihtml += "</div>";                }                var html = "<div class='pacote-payment-box ajax-box'>";                html += "<div class='title'>Pagamento do Pacote</div>";                html += ihtml;                html += "<input type='button' class='ajax-close-button' value='Fechar' />";                html += "<div class='warn'>Já realizou todos os pagamentos e seu pacote ainda não está quitado? Entre em contato conosco.</div>";                html += "</div>";                $("body").prepend("<div id='ajax-box-container'></div>");                $("#ajax-box-container").after(html);                if (parseInt(pacote.tipo_pagamento_id) === 3) {                    self.loadPacoteParcelas(pacote.id_pacote);                }            } else {                self.genericError(response.error);            }        });    },    loadPacoteParcelas: function (pacote_id) {        var self = this;        this.makeSyncRequest("getPacoteParcelas", {pacote_id: pacote_id}, function (response) {            response = eval("( " + response + " )");            if (response.success === "true") {                var html = "";                var i = 1;                html += "<div class='parcela-header'>";                html += "<div class='header field-count'>Nº</div>";                html += "<div class='header field-valor'>Valor</div>";                html += "<div class='header field-vencimento'>Vencimento</div>";                html += "<div class='header field-status'>Status</div>";                html += "<div class='header field-action'>Ação</div>";                html += "</div>"                $.each(response.parcelas, function (index, parcela) {                    html += "<div class='parcela-info'>";                    html += "<div class='field field-count'>" + i + "</div>";                    html += "<div class='field field-valor'>" + parcela.valor + "</div>";                    html += "<div class='field field-vencimento'>" + parcela.data_vencimento + "</div>";                    switch (parseInt(parcela.status)) {                        case 0:                            html += "<div class='field field-status field-status-cancelada'>Cancelada</div>";                            break;                        case 1:                            html += "<div class='field field-status field-status-pendente'>Pendente</div>";                            html += "<div class='field field-action field-action-confirm' parcela='" + parcela.id + "' valor='" + parcela.valor + "'>Confirmar</div>";                            break;                        case 2:                            html += "<div class='field field-status field-status-aprovada'>Aprovada</div>";                            break;                        case 3:                            html += "<div class='field field-status field-status-aguardando'>Em Confirmação</div>";                            break;                    }                    html += "<div class='clear'></div>";                    html += "</div>";                });                $(".pacote-parcelas-box").append(html);                $(".field-action-confirm").die().live("click", function () {                    self.confirmParcelaForm($(this).attr("parcela"), $(this).attr("valor"));                });            } else {                self.genericError(response.error);            }        }, false);    },    confirmParcelaForm: function (id, valor) {        var self = this;        var html = "<div class='title'>Confirmar Parcela</div>";        html += "Se você deseja confirmar a parcela de identificador '" + id + "' de valor " + valor + " anexe o formulário no campo abaixo.";        html += "<form id='form-confirm-parcela' name='form-confirm-parcela' method='post' enctype='multipart/form-data'>";        html += "<input type='hidden' id='parcela-field-id' value='" + parseInt(id) + "' name='id' />";        html += "<input type='file' id='parcela-field-comprovante' name='comprovante' />";        html += "<input type='button' id='submit-parcela' name='submit' value='Confirmar Parcela' />";        html += "</form>";        html += "<input type='button' class='ajax-close-button' value='Cancelar' />";        $(".ajax-box").html(html);        $("#submit-parcela").die().live("click", function () {            var parcela_id = $("#parcela-field-id").val();            if ($("#parcela-field-comprovante").length > 0) {                var comprovante_file = document.getElementById("parcela-field-comprovante").files[0];            }            var form = new FormData();            var xhr = new XMLHttpRequest();            form.append("mode", "parcelaConfirmSubmit");            form.append("parcela_id", parcela_id);            form.append("comprovante", comprovante_file);            xhr.open('POST', self.dyon_root, true);            xhr.onreadystatechange = function () {                if (xhr.readyState == 2) {                    $("#submit-parcela").val("Carregando...").attr("disabled", "disabled");                }                if (xhr.readyState == 4 && xhr.status == 200) {                    var data = eval("(" + xhr.responseText + ")");                    if (data.success == "true") {                        var html = "<div class='title'>Confirmar Parcela</div>";                        html += "Comprovante enviado, aguarde a confirmação da sua parcela. Essa confirmação pode demorar até 48h para ser processada. :)";                        html += "<input type='button' class='ajax-close-button' value='Fechar' />";                        $(".ajax-box").html(html);                    } else {                        self.genericError(data.error);                    }                }            };            xhr.send(form);        });        return false;    },    loadGroupMembers: function (id_grupo) {        var self = this;        if (isNaN(parseInt(id_grupo))) {            self.genericError("Identificador do grupo inválido.");        }        self.makeRequest("getGroupMembers", {id_grupo: id_grupo}, function (response) {            response = eval("( " + response + " )");            if (response.success === "true") {                var html = "<div class='ajax-box group-list-members'>";                html += "<div class='title'>Membros do Grupo</div>";                $.each(response.members, function (index, member) {                    html += "<div class='member'>" + member.nome + "</div>";                });                html += "<input type='button' class='ajax-close-button' value='Fechar' />";                html += "</div>";                $("body").prepend("<div id='ajax-box-container'></div>");                $("#ajax-box-container").after(html);            } else {                self.genericError(response.error);            }        }, false);    }};